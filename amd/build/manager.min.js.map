{"version":3,"sources":["../src/manager.js"],"names":["define","Ajax","Notification","Templates","Str","SELECTORS","AUTOMATICSENDREGION","TOGGLEAUTOMATICSEND","LOADING","TEMPLATES","AUTOMATICSENDALERT","SERVICES","UPDATEAUTOMATICSEND","displayLoading","element","visibility","querySelector","classList","remove","add","toggleAutomaticSend","automaticsendregion","M","util","js_pending","dataset","certificateid","automaticsend","newstatus","strings","component","get_strings","then","s","confirm","call","methodname","args","render","html","innerHTML","js_complete","fail","exception","init","document","addEventListener","e","target","matches"],"mappings":"AAwBAA,OAAM,iCAAC,CACH,WADG,CAEH,mBAFG,CAGH,gBAHG,CAIH,UAJG,CAAD,CAKH,SACCC,CADD,CAECC,CAFD,CAGCC,CAHD,CAICC,CAJD,CAKD,CAGE,GAAMC,CAAAA,CAAS,CAAG,CACdC,mBAAmB,CAAE,qCADP,CAEdC,mBAAmB,CAAE,sCAFP,CAGdC,OAAO,CAAE,kBAHK,CAAlB,CAMAC,CAAS,CAAG,CACRC,kBAAkB,CAAE,2CADZ,CANZ,CAUAC,CAAQ,CAAG,CACPC,mBAAmB,CAAE,wDADd,CAVX,CAoBA,QAASC,CAAAA,CAAT,CAAwBC,CAAxB,CAAiCC,CAAjC,CAA6C,CACzC,GAAIA,CAAJ,CAAgB,CACZD,CAAO,CAACE,aAAR,CAAsBX,CAAS,CAACG,OAAhC,EAAyCS,SAAzC,CAAmDC,MAAnD,CAA0D,WAA1D,CACH,CAFD,IAEO,CACHJ,CAAO,CAACE,aAAR,CAAsBX,CAAS,CAACG,OAAhC,EAAyCS,SAAzC,CAAmDE,GAAnD,CAAuD,WAAvD,CACH,CACJ,CAOD,QAASC,CAAAA,CAAT,CAA6BC,CAA7B,CAAkD,CAC9CC,CAAC,CAACC,IAAF,CAAOC,UAAP,CAAkB,4CAAlB,EAD8C,MAEPH,CAAmB,CAACL,aAApB,CAAkCX,CAAS,CAACE,mBAA5C,EAAiEkB,OAF1D,CAEvCC,CAFuC,GAEvCA,aAFuC,CAExBC,CAFwB,GAExBA,aAFwB,CAGxCC,CAAS,CAAqB,GAAlB,GAAAD,CAH4B,CAIxCE,CAAO,CAAGD,CAAS,CAEvB,CAAC,CAAC,IAAO,cAAR,CAAwBE,SAAS,CAAE,OAAnC,CAAD,CACE,CAAC,IAAO,qBAAR,CAA+BA,SAAS,CAAE,mBAA1C,CADF,CAEE,CAAC,IAAO,SAAR,CAFF,CAGE,CAAC,IAAO,QAAR,CAHF,CAFuB,CAMvB,CAAC,CAAC,IAAO,cAAR,CAAwBA,SAAS,CAAE,OAAnC,CAAD,CACE,CAAC,IAAO,sBAAR,CAAgCA,SAAS,CAAE,mBAA3C,CADF,CAEE,CAAC,IAAO,SAAR,CAFF,CAGE,CAAC,IAAO,QAAR,CAHF,CAV4C,CAc9C1B,CAAG,CAAC2B,WAAJ,CAAgBF,CAAhB,EAAyBG,IAAzB,CAA8B,SAACC,CAAD,CAAO,CAEjC/B,CAAY,CAACgC,OAAb,CAAqBD,CAAC,CAAC,CAAD,CAAtB,CAA2BA,CAAC,CAAC,CAAD,CAA5B,CAAiCA,CAAC,CAAC,CAAD,CAAlC,CAAuCA,CAAC,CAAC,CAAD,CAAxC,CAA6C,UAAM,CAE/CpB,CAAc,CAACQ,CAAD,IAAd,CACApB,CAAI,CAACkC,IAAL,CAAU,CAAC,CACPC,UAAU,CAAEzB,CAAQ,CAACC,mBADd,CAEPyB,IAAI,CAAE,CAACX,aAAa,CAAEA,CAAhB,CAA+BC,aAAa,CAAEC,CAA9C,CAFC,CAAD,CAAV,EAGI,CAHJ,EAICI,IAJD,CAIM,UAAM,CAER,MAAQ7B,CAAAA,CAAS,CAACmC,MAAV,CACJ7B,CAAS,CAACC,kBADN,CAEJ,CAACgB,aAAa,CAAEA,CAAhB,CAA+BC,aAAa,CAAEC,CAA9C,CAFI,CAGJ,EAHI,CAKX,CAXD,EAYCI,IAZD,CAYM,SAACO,CAAD,CAAU,CACZlB,CAAmB,CAACmB,SAApB,CAAgCD,CAAhC,CACAjB,CAAC,CAACC,IAAF,CAAOkB,WAAP,CAAmB,4CAAnB,EACA,MAAO,KACV,CAhBD,EAiBCC,IAjBD,CAiBMxC,CAAY,CAACyC,SAjBnB,CAkBH,CArBD,EAsBA,MAAO,KACV,CAzBD,EAyBGD,IAzBH,CAyBQxC,CAAY,CAACyC,SAzBrB,CA0BH,CAED,MAAO,CACHC,IAAI,CAAE,eAAW,CACb,GAAMvB,CAAAA,CAAmB,CAAGwB,QAAQ,CAAC7B,aAAT,CAAuBX,CAAS,CAACC,mBAAjC,CAA5B,CACAe,CAAmB,CAACyB,gBAApB,CAAqC,OAArC,CAA8C,SAACC,CAAD,CAAO,CACjD,GAAIA,CAAC,CAACC,MAAF,EAAYD,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB5C,CAAS,CAACE,mBAA3B,CAAhB,CAAiE,CAC7Da,CAAmB,CAACC,CAAD,CACtB,CACJ,CAJD,CAKH,CARE,CAUV,CAlGK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module instantiates the functionality for actions on course certificates.\n *\n * @module      mod_coursecertificate/manager\n * @package     mod_coursecertificate\n * @copyright   2020 Mikel Mart√≠n <mikel@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/str'\n], function(\n    Ajax,\n    Notification,\n    Templates,\n    Str\n) {\n\n    /** @type {Object} The list of selectors for the coursecertificate module. */\n    const SELECTORS = {\n        AUTOMATICSENDREGION: \"[data-region='automaticsend-alert']\",\n        TOGGLEAUTOMATICSEND: \"[data-action='toggle-automaticsend']\",\n        LOADING: \".loading-overlay\"\n    },\n    /** @type {Object} The list of templates for the coursecertificate module. */\n    TEMPLATES = {\n        AUTOMATICSENDALERT: 'mod_coursecertificate/automaticsend_alert'\n    },\n    /** @type {Object} The list of services for the coursecertificate module. */\n    SERVICES = {\n        UPDATEAUTOMATICSEND: 'mod_coursecertificate_update_certificate_automaticsend'\n    };\n\n    /**\n     * Show/Hide loading overlay.\n     *\n     * @param {Element} element\n     * @param {boolean} visibility\n     */\n    function displayLoading(element, visibility) {\n        if (visibility) {\n            element.querySelector(SELECTORS.LOADING).classList.remove('invisible');\n        } else {\n            element.querySelector(SELECTORS.LOADING).classList.add('invisible');\n        }\n    }\n\n    /**\n     * Toggle the automaticsend setting on/off for coursecertificate.\n     *\n     * @param {Element} automaticsendregion\n     */\n    function toggleAutomaticSend(automaticsendregion) {\n        M.util.js_pending('mod_coursecertificate_toggle_automaticsend');\n        const {certificateid, automaticsend} = automaticsendregion.querySelector(SELECTORS.TOGGLEAUTOMATICSEND).dataset;\n        const newstatus = automaticsend === '0';\n        const strings = newstatus\n        // Load strings depending on newstatus.\n        ? [{'key': 'confirmation', component: 'admin'},\n            {'key': 'enableautomaticsend', component: 'coursecertificate'},\n            {'key': 'confirm'},\n            {'key': 'cancel'}]\n        : [{'key': 'confirmation', component: 'admin'},\n            {'key': 'disableautomaticsend', component: 'coursecertificate'},\n            {'key': 'confirm'},\n            {'key': 'cancel'}];\n        Str.get_strings(strings).then((s) => {\n            // Show confirm notification.\n            Notification.confirm(s[0], s[1], s[2], s[3], () => {\n                // Show loading template.\n                displayLoading(automaticsendregion, true);\n                Ajax.call([{\n                    methodname: SERVICES.UPDATEAUTOMATICSEND,\n                    args: {certificateid: certificateid, automaticsend: newstatus}\n                }])[0]\n                .then(() => {\n                    // Reload automatic send alert template.\n                    return  Templates.render(\n                        TEMPLATES.AUTOMATICSENDALERT,\n                        {certificateid: certificateid, automaticsend: newstatus},\n                        ''\n                    );\n                })\n                .then((html) => {\n                    automaticsendregion.innerHTML = html;\n                    M.util.js_complete('mod_coursecertificate_toggle_automaticsend');\n                    return null;\n                })\n                .fail(Notification.exception);\n            });\n            return null;\n        }).fail(Notification.exception);\n    }\n\n    return {\n        init: function() {\n            const automaticsendregion = document.querySelector(SELECTORS.AUTOMATICSENDREGION);\n            automaticsendregion.addEventListener('click', (e) => {\n                if (e.target && e.target.matches(SELECTORS.TOGGLEAUTOMATICSEND)) {\n                    toggleAutomaticSend(automaticsendregion);\n                }\n            });\n        }\n    };\n});"],"file":"manager.min.js"}